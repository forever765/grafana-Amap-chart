{"version":3,"sources":["../src/amapchart_ctrl.js"],"names":["MetricsPanelCtrl","_","kbn","TimeSeries","rendering","AmapChartCtrl","$scope","$injector","$rootScope","hiddenSeries","panelDefaults","defaults","panel","events","on","onRender","bind","onDataReceived","onDataError","onInitEditMode","addEditorTab","unitFormats","getUnitFormats","subItem","format","value","render","series","color","aliasColors","alias","map","serie","i","label","data","stats","valueName","colors","legendData","dataList","seriesData","datapoints","target","flotpairs","getFlotPairs","nullPointMode","isNumber","decimals","scaledDecimals","delta","dec","Math","floor","log","LN10","magn","pow","norm","size","result","max","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"amapchart_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series';\nimport rendering from './rendering';\n\n\nexport class AmapChartCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n    this.hiddenSeries = {};\n\n    var panelDefaults = {\n\n    };\n\n    _.defaults(this.panel, panelDefaults);\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/grafana-amap-panel/editor.html', 2);\n    this.addEditorTab(\"Amap Options\" , \"public/plugins/grafana-amap-panel/editor-amap-options.html\",3);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.render();\n  }\n\n  onDataError() {\n    this.series = [];\n    this.render();\n  }\n\n  changeSeriesColor(series, color) {\n    series.color = color;\n    this.panel.aliasColors[series.alias] = series.color;\n    this.render();\n  }\n\n  onRender() {\n    //this.data = this.parseSeries(this.series);\n  }\n\n  parseSeries(series) {\n    return _.map(this.series, (serie, i) => {\n      return {\n        label: serie.alias,\n        data: serie.stats[this.panel.valueName],\n        color: this.panel.aliasColors[serie.alias] || this.$rootScope.colors[i],\n        legendData: serie.stats[this.panel.valueName],\n      };\n    });\n  }\n\n  onDataReceived(dataList) {\n    //window.receiveData(dataList);\n    //this.series = dataList.map(this.seriesHandler.bind(this));\n    this.data = dataList;\n    this.render(true);\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target\n    });\n\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  getDecimalsForValue(value) {\n    if (_.isNumber(this.panel.decimals)) {\n      return { decimals: this.panel.decimals, scaledDecimals: null };\n    }\n\n    var delta = value / 2;\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n    var magn = Math.pow(10, -dec);\n    var norm = delta / magn; // norm is between 1.0 and 10.0\n    var size;\n\n    if (norm < 1.5) {\n      size = 1;\n    } else if (norm < 3) {\n      size = 2;\n      // special case for 2.5, requires an extra decimal\n      if (norm > 2.25) {\n        size = 2.5;\n        ++dec;\n      }\n    } else if (norm < 7.5) {\n      size = 5;\n    } else {\n      size = 10;\n    }\n\n    size *= magn;\n\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) { dec = 0; }\n\n    var result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n\n    return result;\n  }\n\n  formatValue(value) {\n    var decimalInfo = this.getDecimalsForValue(value);\n    var formatFunc = kbn.valueFormats[this.panel.format];\n    if (formatFunc) {\n      return formatFunc(value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n    }\n    return value;\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    rendering(scope, elem, attrs, ctrl);\n  }\n\n  toggleSeries(serie) {\n    if (this.hiddenSeries[serie.label]) {\n      delete this.hiddenSeries[serie.label];\n    } else {\n      this.hiddenSeries[serie.label] = true;\n    }\n    this.render();\n  }\n}\n\nAmapChartCtrl.templateUrl = 'module.html';\n"]}